git status #Gives the status of the git repository and the files within
git add <file-name> #adds files to staging area
git add -A #adds all the changes to the staging area
git mv <file-name> <file-name> #renames the files and adds the rename to the staging area
git mv <file-name> <path> #moves the file to the specified location
git restore --staged <file-name> #replaces the local file with the staged file
git restore <file-name> #restores the local file with the last commited file
git ls-files #List files that are tracked by git
git init <project-name #start new project
git pull <origin-name> <branch-name> #Pull branch from origin to local
git push <origin-name> <branch-name> #Push branch from local to origin
git branch -a #List branches local and remote
git branch <branch naam> # Makes new branch
git checkout <branch name> # Switches to new branch
git checkout -b <branch name> # Makes new branch and switches to
git branch -m <old branch name> <new branch name> # Renames branch
git branch -d <branch name> # Deletes branch
git diff <branch name> <other branch name> # See differences between branches
git merge <branch name> # Merges branch to current branch
git merge <branch name> --no--ff # Merges branch to current branch and preserves branch lines
git merge <branch name> -m "<Commit message>" # Merges branch to current branch with commit
git mergetool # You have to configure a merge tool for this to solve merge conflicts

Settings
user.name=Bart van Zijl
user.email=bart.v.zijl@gmail.com
alias.hist=log --all --graph --decorate --oneline
alias.ls=ls-files
core.editor=code --wait
core.autocrlf=input